{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashangi\\\\Desktop\\\\ITP2\\\\LMS\\\\frontend\\\\src\\\\Components\\\\ClassManagement\\\\rejectNewClassRequest.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewClassRequestDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({ ...this.state,\n        [name]: value\n      });\n    };\n\n    this.onsubmit = e => {\n      e.preventDefault();\n      const id = this.props.match.params.id;\n      const {\n        class_name,\n        teacher_id,\n        teacher_name,\n        subject,\n        grade,\n        type,\n        fee,\n        day,\n        start_time,\n        end_time,\n        status,\n        no_of_students,\n        reason\n      } = this.state;\n      const data = {\n        class_name: class_name,\n        teacher_id: teacher_id,\n        teacher_name: teacher_name,\n        subject: subject,\n        grade: grade,\n        type: type,\n        fee: fee,\n        day: day,\n        start_time: start_time,\n        end_time: end_time,\n        status: status,\n        no_of_students: no_of_students,\n        reason: reason\n      };\n      console.log(data);\n      axios.put(`http://localhost:8070/newclassrequest/update/${id}`, data).then(res => {\n        if (res.data.success) {\n          alert(\"Request Rejected\");\n          this.setState({\n            class_name: \"\",\n            teacher_id: \"\",\n            teacher_name: \"\",\n            subject: \"\",\n            grade: \"\",\n            type: \"\",\n            fee: \"\",\n            day: \"\",\n            start_time: \"\",\n            end_time: \"\",\n            status: \"\",\n            no_of_students: \"0\",\n            reason: \"\"\n          });\n        }\n      });\n    };\n\n    this.state = {\n      class_name: \"\",\n      teacher_id: \"\",\n      teacher_name: \"\",\n      subject: \"\",\n      grade: \"\",\n      type: \"\",\n      fee: \"\",\n      day: \"\",\n      start_time: \"\",\n      end_time: \"\",\n      status: \"\",\n      no_of_students: \"0\",\n      reason: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    axios.get(`http://localhost:8070/newclassrequest/post/${id}`).then(res => {\n      if (res.data.success) {\n        this.setState({\n          class_name: res.data.newclassrequests.class_name,\n          teacher_id: res.data.newclassrequests.teacher_id,\n          teacher_name: res.data.newclassrequests.teacher_name,\n          subject: res.data.newclassrequests.subject,\n          grade: res.data.newclassrequests.grade,\n          type: res.data.newclassrequests.type,\n          fee: res.data.newclassrequests.fee,\n          day: res.data.newclassrequests.day,\n          start_time: res.data.newclassrequests.start_time,\n          end_time: res.data.newclassrequests.end_time,\n          status: res.data.newclassrequests.status,\n          no_of_students: res.data.newclassrequests.no_of_students,\n          reason: res.data.newclassrequests.reason\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"className\",\n            children: \"Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            name: \"reason\",\n            id: \"reason\",\n            placeholder: \"Enter reason\",\n            required: true,\n            value: this.state.reason,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            class: \"form-control\",\n            name: \"status\",\n            id: \"status\",\n            placeholder: \"\",\n            value: this.state.status,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"form-check-input\",\n            type: \"checkbox\",\n            name: \"status\",\n            id: \"status\",\n            value: \"Rejected\",\n            required: true,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"form-check-label\",\n            for: \"inlineCheckbox1\",\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"btn btn-primary\",\n            onClick: this.onsubmit,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yashangi/Desktop/ITP2/LMS/frontend/src/Components/ClassManagement/rejectNewClassRequest.js"],"names":["React","Component","axios","NewClassRequestDetails","constructor","props","handleInputChange","e","name","value","target","setState","state","onsubmit","preventDefault","id","match","params","class_name","teacher_id","teacher_name","subject","grade","type","fee","day","start_time","end_time","status","no_of_students","reason","data","console","log","put","then","res","success","alert","componentDidMount","get","newclassrequests","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class NewClassRequestDetails extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            class_name:\"\",\r\n            teacher_id:\"\",\r\n            teacher_name:\"\",\r\n            subject:\"\",\r\n            grade:\"\",\r\n            type:\"\",\r\n            fee:\"\",\r\n            day:\"\",\r\n            start_time:\"\",\r\n            end_time:\"\",\r\n            status:\"\",\r\n            no_of_students:\"0\",\r\n            reason:\"\"\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) =>{\r\n        const{name,value} = e.target;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    onsubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n        const id = this.props.match.params.id;\r\n        const {class_name,teacher_id,teacher_name,subject,grade,type,fee,day,start_time,end_time,status,no_of_students,reason} = this.state;\r\n\r\n        const data ={\r\n            class_name:class_name,\r\n            teacher_id:teacher_id,\r\n            teacher_name:teacher_name,\r\n            subject:subject,\r\n            grade:grade,\r\n            type:type,\r\n            fee:fee,\r\n            day:day,\r\n            start_time:start_time,\r\n            end_time:end_time,\r\n            status:status,\r\n            no_of_students:no_of_students,\r\n            reason:reason\r\n        }\r\n\r\n        console.log(data)\r\n\r\n        axios.put(`http://localhost:8070/newclassrequest/update/${id}`,data).then((res) =>{\r\n        if(res.data.success){\r\n            alert(\"Request Rejected\")\r\n            this.setState(\r\n                {\r\n                    class_name:\"\",\r\n                    teacher_id:\"\",\r\n                    teacher_name:\"\",\r\n                    subject:\"\",\r\n                    grade:\"\",\r\n                    type:\"\",\r\n                    fee:\"\",\r\n                    day:\"\",\r\n                    start_time:\"\",\r\n                    end_time:\"\",\r\n                    status:\"\",\r\n                    no_of_students:\"0\",\r\n                    reason:\"\"\r\n                }\r\n             )\r\n         }\r\n       })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        const id = this.props.match.params.id;\r\n\r\n        axios.get(`http://localhost:8070/newclassrequest/post/${id}`).then((res) =>{\r\n            if(res.data.success){\r\n                this.setState({\r\n                    class_name:res.data.newclassrequests.class_name,\r\n                    teacher_id:res.data.newclassrequests.teacher_id,\r\n                    teacher_name:res.data.newclassrequests.teacher_name,\r\n                    subject:res.data.newclassrequests.subject,\r\n                    grade:res.data.newclassrequests.grade,\r\n                    type:res.data.newclassrequests.type,\r\n                    fee:res.data.newclassrequests.fee,\r\n                    day:res.data.newclassrequests.day,\r\n                    start_time:res.data.newclassrequests.start_time,\r\n                    end_time:res.data.newclassrequests.end_time,\r\n                    status:res.data.newclassrequests.status,\r\n                    no_of_students:res.data.newclassrequests.no_of_students,\r\n                    reason:res.data.newclassrequests.reason\r\n                });\r\n\r\n            }\r\n        });        \r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className =\"container\"><br></br>\r\n            \r\n            \r\n            <form>\r\n\r\n                {/*<div class=\"form-group\">\r\n                    <label for=\"className\">Class Name</label>\r\n                    <input type=\"hidden\" class=\"form-control\" name = \"class_name\" id=\"className\"  placeholder=\"Enter class name\" required\r\n                    value={this.state.class_name}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"className\">Subject</label>\r\n                    <input type=\"text\" class=\"form-control\" name = \"subject\" id=\"subject\"  placeholder=\"Enter subject\" required\r\n                    value={this.state.subject}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"grade\">Grade</label>\r\n                    <input type=\"hidden\" class=\"form-control\" name =\"grade\" id=\"grade\"  placeholder=\"Enter class grade\" required\r\n                    value={this.state.grade}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"type\">Type</label>\r\n                    <input type=\"hidden\" class=\"form-control\" name =\"type\" id=\"type\"  placeholder=\"Enter class type\" required\r\n                    value={this.state.type}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"fee\">Fee</label>\r\n                    <input type=\"hidden\" class=\"form-control\" name =\"fee\" id=\"fee\"  placeholder=\"Enter class fee\" required\r\n                    value={this.state.fee}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"mr-sm-2\" for=\"inlineFormCustomSelect\">Day</label>\r\n                    <select class=\"custom-select mr-sm-2\" name =\"day\" id=\"inlineFormCustomSelect\" required\r\n                    value={this.state.day}\r\n                    onChange={this.handleInputChange}>\r\n                        <option selected>Choose...</option>\r\n                        <option value=\"Monday\">Monday</option>\r\n                        <option value=\"Tuesday\">Tuesday</option>\r\n                        <option value=\"Wensday\">Wensday</option>\r\n                        <option value=\"Thursday\">Thursday</option>\r\n                        <option value=\"Friday\">Friday</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"startTime\">Start Time</label>\r\n                    <input type=\"hidden\" class=\"form-control\" name =\"start_time\" id=\"startTime\"  placeholder=\"Enter class start time ex - 3:30 P.M.\" required\r\n                    value={this.state.start_time}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"endTime\">End Time</label>\r\n                    <input type=\"hidden\" class=\"form-control\" name =\"end_time\" id=\"endTime\"  placeholder=\"Enter class end time ex - 5:30 P.M.\" required\r\n                    value={this.state.end_time}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>*/}\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"className\">Reason</label>\r\n                    <input type=\"text\" class=\"form-control\" name = \"reason\" id=\"reason\"  placeholder=\"Enter reason\" required\r\n                    value={this.state.reason}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"hidden\" class=\"form-control\" name =\"status\" id=\"status\"  placeholder=\"\"\r\n                    value={this.state.status}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>\r\n\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" name=\"status\"  id=\"status\" value=\"Rejected\" required\r\n                    onChange={this.handleInputChange}></input>\r\n                    <label class=\"form-check-label\" for=\"inlineCheckbox1\">Reject</label>\r\n                </div>\r\n\r\n                {/*<div class=\"form-group\">\r\n                    <input type=\"hidden\" class=\"form-control\" name =\"no_of_students\" id=\"no_of_students\"  placeholder=\"\"\r\n                    value={this.state.no_of_students}\r\n                    onChange={this.handleInputChange}></input>\r\n                </div>*/}\r\n\r\n                \r\n        \r\n            <div><br></br><button type=\"submit\" class=\"btn btn-primary\" onClick={this.onsubmit}>Confirm</button></div>\r\n        </form>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}