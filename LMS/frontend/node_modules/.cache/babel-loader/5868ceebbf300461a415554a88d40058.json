{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NGC\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\screens\\\\ProfileScreen\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport MainScreen from \"../../component/MainScreen\";\nimport ErrorMessage from \"../../component/ErrorMessage\";\nimport { useHistory } from \"react-router\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading,\n    error,\n    success\n  } = userUpdate;\n  const history = useHistory();\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = pics => {\n    if (!pics) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n\n    setPicMessage(null);\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"imaxinstitute\");\n      data.append(\"cloud_name\", \"dhnjhdggs\");\n      fetch(\"https://api.cloudinary.com/v1_1/dhnjhdggs/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        setPic(data.url.toString());\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (password == confirmPassword) dispatch(updateProfile({\n      name,\n      email,\n      password,\n      pic\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"EDIT PROFILE\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"profileContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 27\n            }, this), success && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"success\",\n              children: \"Updated Successfully\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Enter Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"confirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), \" \", picMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"danger\",\n              children: picMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"pic\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Change Profile Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                onChange: e => postDetails(e.target.files[0]),\n                id: \"custom-file\",\n                type: \"image/png\",\n                label: \"Upload Profile Picture\",\n                custom: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              varient: \"primary\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pic,\n            alt: name,\n            className: \"profilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ProfileScreen, \"/jjyfVnPwoQs2GuFD3vLG5nH+VQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useHistory];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/NGC/Desktop/LMS/frontend/src/screens/ProfileScreen/ProfileScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Button","Col","Form","Row","MainScreen","ErrorMessage","useHistory","updateProfile","ProfileScreen","name","setName","email","setEmail","pic","setPic","password","setPassword","confirmPassword","setConfirmPassword","picMessage","setPicMessage","dispatch","userLogin","state","userInfo","userUpdate","loading","error","success","history","push","postDetails","pics","type","data","FormData","append","fetch","method","body","then","res","json","console","log","url","toString","catch","err","submitHandler","e","preventDefault","target","value","files","display","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport MainScreen from \"../../component/MainScreen\";\r\nimport ErrorMessage, {} from \"../../component/ErrorMessage\";\r\nimport { useHistory } from \"react-router\";\r\nimport { updateProfile } from \"../../actions/userActions\";\r\nconst ProfileScreen = () => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pic, setPic] = useState();\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [picMessage, setPicMessage] = useState();\r\n  \r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n  \r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const { loading, error, success } = userUpdate;\r\n\r\n\r\n    const history=useHistory();\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n          history.push(\"/\");\r\n        } else {\r\n          setName(userInfo.name);\r\n          setEmail(userInfo.email);\r\n          setPic(userInfo.pic);\r\n        }\r\n      }, [history, userInfo]);\r\n\r\n\r\n\r\n    const postDetails = (pics) => {\r\n        if (!pics) {  \r\n         return setPicMessage(\"Please Select an Image\");\r\n        }\r\n        setPicMessage(null);\r\n        if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n          const data = new FormData();\r\n          data.append(\"file\", pics);\r\n          data.append(\"upload_preset\", \"imaxinstitute\");\r\n          data.append(\"cloud_name\", \"dhnjhdggs\");\r\n          fetch(\"https://api.cloudinary.com/v1_1/dhnjhdggs/image/upload\", {\r\n            method: \"post\",\r\n            body: data,\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n              setPic(data.url.toString());\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          return setPicMessage(\"Please Select an Image\");\r\n        }\r\n      };\r\n\r\n      const submitHandler = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if(password==confirmPassword)\r\n        dispatch(updateProfile({ name, email, password, pic }));\r\n      };\r\n\r\n\r\n\r\n    return( <MainScreen title=\"EDIT PROFILE\">\r\n    <div>\r\n        <Row className=\"profileContainer\">\r\n            <Col md={6}>\r\n\r\n\r\n            <Form onSubmit={submitHandler}>\r\n            {/* <Form > */}\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>{\" \"}\r\n              {picMessage && (\r\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n              )}\r\n              <Form.Group controlId=\"pic\">\r\n                <Form.Label>Change Profile Picture</Form.Label>\r\n                <Form.File\r\n                  onChange={(e) => postDetails(e.target.files[0])}\r\n                  id=\"custom-file\"\r\n                  type=\"image/png\"\r\n                  label=\"Upload Profile Picture\"\r\n                  custom\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" varient=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n            </Col>\r\n\r\n\r\n            <Col\r\n             style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              >\r\n             <img src={pic} alt={name} className=\"profilePic\" />\r\n             </Col>\r\n        </Row>\r\n    </div>\r\n    </MainScreen>\r\n    )\r\n};\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}