{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NGC\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\screens\\\\RegisterScreen\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\n// import axios from \"axios\";\n// import { useState } from \"react\";\n// import { Button, Col, Form, Row } from \"react-bootstrap\";\n// import { Link } from \"react-router-dom\";\n// import ErrorMessage from \"../../component/ErrorMessage\";\n// import Loading from \"../../component/Loading\";\n// import MainScreen from \"../../component/MainScreen\";\n// const RegisterScreen = () => {\n//     const [email, setEmail] = useState(\"\");\n//     const [name, setName] = useState(\"\");\n//     const [pic, setPic] = useState(\n//       \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n//     );\n//     const [password, setPassword] = useState(\"\");\n//     const [confirmpassword, setConfirmPassword] = useState(\"\");\n//     const [message, setMessage] = useState(null);\n//     const [picMessage, setPicMessage] = useState(null);\n//     const [error, setError] = useState(false);\n//     const [loading, setLoading] = useState(false);\n//     const submitHandler=async(e)=>{\n//         e.preventDefault();\n//         if (password !==confirmpassword){\n//             setMessage(\"Password do not  match\");\n//         }else{\n//             setMessage(null)\n//             try {\n//                 const config ={\n//                     headers:{\n//                         \"Content-type\": \"application/json\",\n//                     },\n//                 };\n//                 setLoading(true);\n//                 const {data} =await axios.post(\n//                     \"api/users\",\n//                     {name,pic,email,password},\n//                     config\n//                 );\n//                 console.log();\n//                 setLoading(false);\n//                 localStorage.setItem(\"userInfo\",JSON.stringify(data));\n//             } catch (error) {\n//                 setError(error.response.data.message);\n//             }       \n//         }\n//     };\n//     const postDetails = (pics) => {\n//         if (!pics) {  \n//          return setPicMessage(\"Please Select an Image\");\n//         }\n//         setPicMessage(null);\n//         if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n//           const data = new FormData();\n//           data.append(\"file\", pics);\n//           data.append(\"upload_preset\", \"imaxinstitute\");\n//           data.append(\"cloud_name\", \"dhnjhdggs\");\n//           fetch(\"https://api.cloudinary.com/v1_1/dhnjhdggs/image/upload\", {\n//             method: \"post\",\n//             body: data,\n//           })\n//             .then((res) => res.json())\n//             .then((data) => {\n//                 console.log(data);\n//               setPic(data.url.toString());\n//             })\n//             .catch((err) => {\n//               console.log(err);\n//             });\n//         } else {\n//           return setPicMessage(\"Please Select an Image\");\n//         }\n//       };\n//     return (\n//     <MainScreen title=\"REGISTER\">\n//     <div className=\"loginContainer\">\n//       {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n//       {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n//       {loading && <Loading />}\n//       <Form onSubmit={submitHandler}>\n//         <Form.Group controlId=\"name\">\n//           <Form.Label>Name</Form.Label>\n//           <Form.Control\n//             type=\"name\"\n//            value={name}\n//             placeholder=\"Enter name\"\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Form.Group controlId=\"formBasicEmail\">\n//           <Form.Label>Email address</Form.Label>\n//           <Form.Control\n//             type=\"email\"\n//             value={email}\n//             placeholder=\"Enter email\"\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Form.Group controlId=\"formBasicPassword\">\n//           <Form.Label>Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//            value={password}\n//             placeholder=\"Password\"\n//            onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Form.Group controlId=\"confirmPassword\">\n//           <Form.Label>Confirm Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             value={confirmpassword}\n//             placeholder=\"Confirm Password\"\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//           />\n//         </Form.Group>\n//         {picMessage && (\n//           <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n//         )}\n//         <Form.Group controlId=\"pic\">\n//           <Form.Label>Profile Picture</Form.Label>\n//           <Form.File\n//            onChange={(e) => postDetails(e.target.files[0])}\n//             id=\"custom-file\"\n//             type=\"image/png\"\n//             label=\"Upload Profile Picture\"\n//             custom\n//           />\n//         </Form.Group>\n//         <Button variant=\"primary\" type=\"submit\">\n//           Register\n//         </Button>\n//       </Form>\n//       <Row className=\"py-3\">\n//         <Col>\n//           Have an Account ? <Link to=\"/login\">Login</Link>\n//         </Col>\n//       </Row>\n//     </div>\n//   </MainScreen>\n//     )\n// };\n// export default RegisterScreen;\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../component/Loading\";\nimport ErrorMessage from \"../../component/ErrorMessage\";\nimport MainScreen from \"../../component/MainScreen\";\nimport \"./RegisterScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen({\n  history\n}) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n\n  const postDetails = pics => {\n    if (pics === \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\") {\n      return setPicMessage(\"Please Select an Image\");\n    }\n\n    setPicMessage(null);\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setPic(data.url.toString());\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else dispatch(register(name, email, password, pic));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"REGISTER\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            value: name,\n            placeholder: \"Enter name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            placeholder: \"Enter email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: confirmpassword,\n            placeholder: \"Confirm Password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), picMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          variant: \"danger\",\n          children: picMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"pic\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            onChange: e => postDetails(e.target.files[0]),\n            id: \"custom-file\",\n            type: \"image/png\",\n            label: \"Upload Profile Picture\",\n            custom: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Have an Account ? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterScreen, \"3sY2ePrbrWSzyXDzsDnI59Gbb3A=\");\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/NGC/Desktop/LMS/frontend/src/screens/RegisterScreen/RegisterScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","Link","Loading","ErrorMessage","MainScreen","RegisterScreen","history","email","setEmail","name","setName","pic","setPic","password","setPassword","confirmpassword","setConfirmPassword","message","setMessage","picMessage","setPicMessage","postDetails","pics","type","data","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","userInfo","push","submitHandler","e","preventDefault","dispatch","register","error","loading","target","value","files"],"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","sourcesContent":["// import axios from \"axios\";\r\n// import { useState } from \"react\";\r\n// import { Button, Col, Form, Row } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n// import ErrorMessage from \"../../component/ErrorMessage\";\r\n// import Loading from \"../../component/Loading\";\r\n// import MainScreen from \"../../component/MainScreen\";\r\n\r\n// const RegisterScreen = () => {\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [name, setName] = useState(\"\");\r\n//     const [pic, setPic] = useState(\r\n//       \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n//     );\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n//     const [message, setMessage] = useState(null);\r\n//     const [picMessage, setPicMessage] = useState(null);\r\n//     const [error, setError] = useState(false);\r\n//     const [loading, setLoading] = useState(false);\r\n\r\n//     const submitHandler=async(e)=>{\r\n//         e.preventDefault();\r\n\r\n//         if (password !==confirmpassword){\r\n//             setMessage(\"Password do not  match\");\r\n//         }else{\r\n//             setMessage(null)\r\n//             try {\r\n//                 const config ={\r\n//                     headers:{\r\n//                         \"Content-type\": \"application/json\",\r\n//                     },\r\n//                 };\r\n//                 setLoading(true);\r\n\r\n//                 const {data} =await axios.post(\r\n//                     \"api/users\",\r\n//                     {name,pic,email,password},\r\n//                     config\r\n//                 );\r\n//                 console.log();\r\n//                 setLoading(false);\r\n//                 localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n\r\n//             } catch (error) {\r\n//                 setError(error.response.data.message);\r\n//             }       \r\n            \r\n//         }\r\n\r\n//     };\r\n\r\n//     const postDetails = (pics) => {\r\n//         if (!pics) {  \r\n//          return setPicMessage(\"Please Select an Image\");\r\n//         }\r\n//         setPicMessage(null);\r\n//         if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n//           const data = new FormData();\r\n//           data.append(\"file\", pics);\r\n//           data.append(\"upload_preset\", \"imaxinstitute\");\r\n//           data.append(\"cloud_name\", \"dhnjhdggs\");\r\n//           fetch(\"https://api.cloudinary.com/v1_1/dhnjhdggs/image/upload\", {\r\n//             method: \"post\",\r\n//             body: data,\r\n//           })\r\n//             .then((res) => res.json())\r\n//             .then((data) => {\r\n//                 console.log(data);\r\n//               setPic(data.url.toString());\r\n//             })\r\n//             .catch((err) => {\r\n//               console.log(err);\r\n//             });\r\n//         } else {\r\n//           return setPicMessage(\"Please Select an Image\");\r\n//         }\r\n//       };\r\n\r\n\r\n\r\n//     return (\r\n\r\n//     <MainScreen title=\"REGISTER\">\r\n//     <div className=\"loginContainer\">\r\n//       {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n//       {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n//       {loading && <Loading />}\r\n//       <Form onSubmit={submitHandler}>\r\n//         <Form.Group controlId=\"name\">\r\n//           <Form.Label>Name</Form.Label>\r\n//           <Form.Control\r\n//             type=\"name\"\r\n//            value={name}\r\n//             placeholder=\"Enter name\"\r\n//             onChange={(e) => setName(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"formBasicEmail\">\r\n//           <Form.Label>Email address</Form.Label>\r\n//           <Form.Control\r\n//             type=\"email\"\r\n//             value={email}\r\n//             placeholder=\"Enter email\"\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"formBasicPassword\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//            value={password}\r\n//             placeholder=\"Password\"\r\n//            onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"confirmPassword\">\r\n//           <Form.Label>Confirm Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             value={confirmpassword}\r\n//             placeholder=\"Confirm Password\"\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         {picMessage && (\r\n//           <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n//         )}\r\n//         <Form.Group controlId=\"pic\">\r\n//           <Form.Label>Profile Picture</Form.Label>\r\n//           <Form.File\r\n//            onChange={(e) => postDetails(e.target.files[0])}\r\n//             id=\"custom-file\"\r\n//             type=\"image/png\"\r\n//             label=\"Upload Profile Picture\"\r\n//             custom\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Button variant=\"primary\" type=\"submit\">\r\n//           Register\r\n//         </Button>\r\n//       </Form>\r\n//       <Row className=\"py-3\">\r\n//         <Col>\r\n//           Have an Account ? <Link to=\"/login\">Login</Link>\r\n//         </Col>\r\n//       </Row>\r\n//     </div>\r\n//   </MainScreen>\r\n\r\n//     )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// };\r\n\r\n// export default RegisterScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../component/Loading\";\r\nimport ErrorMessage from \"../../component/ErrorMessage\";\r\n\r\nimport MainScreen from \"../../component/MainScreen\";\r\nimport \"./RegisterScreen.css\";\r\n\r\nfunction RegisterScreen({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [pic, setPic] = useState(\r\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n  );\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [picMessage, setPicMessage] = useState(null);\r\n\r\n  \r\n  const postDetails = (pics) => {\r\n    if (\r\n      pics ===\r\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n    ) {\r\n      return setPicMessage(\"Please Select an Image\");\r\n    }\r\n    setPicMessage(null);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"notezipper\");\r\n      data.append(\"cloud_name\", \"piyushproj\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage(\"Please Select an Image\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmpassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else dispatch(register(name, email, password, pic));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"REGISTER\">\r\n      <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confirmpassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {picMessage && (\r\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n          )}\r\n          <Form.Group controlId=\"pic\">\r\n            <Form.Label>Profile Picture</Form.Label>\r\n            <Form.File\r\n              onChange={(e) => postDetails(e.target.files[0])}\r\n              id=\"custom-file\"\r\n              type=\"image/png\"\r\n              label=\"Upload Profile Picture\"\r\n              custom\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Have an Account ? <Link to=\"/login\">Login</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}