{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NGC\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\screens\\\\RegisterScreen\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { register } from \"../../actions/userActions\";\nimport ErrorMessage from \"../../component/ErrorMessage\";\nimport Loading from \"../../component/Loading\";\nimport MainScreen from \"../../component/MainScreen\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null); // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister; //after register redirect page given here\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(register(name, email, password, pic));\n    }\n  };\n\n  const postDetails = pics => {\n    if (!pics) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n\n    setPicMessage(null);\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"imaxinstitute\");\n      data.append(\"cloud_name\", \"dhnjhdggs\");\n      fetch(\"https://api.cloudinary.com/v1_1/dhnjhdggs/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        setPic(data.url.toString());\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"REGISTER\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            value: name,\n            placeholder: \"Enter name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            placeholder: \"Enter email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: confirmpassword,\n            placeholder: \"Confirm Password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), picMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          variant: \"danger\",\n          children: picMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"pic\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            onChange: e => postDetails(e.target.files[0]),\n            id: \"custom-file\",\n            type: \"image/png\",\n            label: \"Upload Profile Picture\",\n            custom: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Have an Account ? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterScreen, \"qRgv0Aajgp8lUH50H1VBFOq5fcg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/NGC/Desktop/LMS/frontend/src/screens/RegisterScreen/RegisterScreen.js"],"names":["axios","useState","Button","Col","Form","Row","Link","register","ErrorMessage","Loading","MainScreen","React","useEffect","useDispatch","useSelector","RegisterScreen","email","setEmail","name","setName","pic","setPic","password","setPassword","confirmpassword","setConfirmPassword","message","setMessage","picMessage","setPicMessage","dispatch","userRegister","state","loading","error","userInfo","history","push","submitHandler","e","preventDefault","postDetails","pics","type","data","FormData","append","fetch","method","body","then","res","json","console","log","url","toString","catch","err","target","value","files"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { register } from \"../../actions/userActions\";\r\nimport ErrorMessage from \"../../component/ErrorMessage\";\r\nimport Loading from \"../../component/Loading\";\r\nimport MainScreen from \"../../component/MainScreen\";\r\nimport React, {  useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst RegisterScreen = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [pic, setPic] = useState(\r\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n    );\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n    const [picMessage, setPicMessage] = useState(null);\r\n    // const [error, setError] = useState(false);\r\n    // const [loading, setLoading] = useState(false);\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst userRegister = useSelector((state) => state.userRegister);\r\nconst { loading, error, userInfo } = userRegister;\r\n//after register redirect page given here\r\nuseEffect(() => {\r\n  if (userInfo) {\r\n    history.push(\"/mynotes\");\r\n  }\r\n}, [history, userInfo]);\r\n\r\n\r\nconst submitHandler=async(e)=>{\r\n        e.preventDefault();\r\n\r\n if (password !== confirmpassword) {\r\nsetMessage(\"Passwords do not match\");\r\n} else {dispatch(register(name, email, password, pic));\r\n}\r\n\r\n      \r\n    };\r\n\r\n    const postDetails = (pics) => {\r\n        if (!pics) {  \r\n         return setPicMessage(\"Please Select an Image\");\r\n        }\r\n        setPicMessage(null);\r\n        if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n          const data = new FormData();\r\n          data.append(\"file\", pics);\r\n          data.append(\"upload_preset\", \"imaxinstitute\");\r\n          data.append(\"cloud_name\", \"dhnjhdggs\");\r\n          fetch(\"https://api.cloudinary.com/v1_1/dhnjhdggs/image/upload\", {\r\n            method: \"post\",\r\n            body: data,\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n              setPic(data.url.toString());\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          return setPicMessage(\"Please Select an Image\");\r\n        }\r\n      };\r\n\r\n\r\n\r\n    return (\r\n\r\n    <MainScreen title=\"REGISTER\">\r\n    <div className=\"loginContainer\">\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n      {loading && <Loading />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n           value={name}\r\n            placeholder=\"Enter name\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n           value={password}\r\n            placeholder=\"Password\"\r\n           onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={confirmpassword}\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        {picMessage && (\r\n          <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n        )}\r\n        <Form.Group controlId=\"pic\">\r\n          <Form.Label>Profile Picture</Form.Label>\r\n          <Form.File\r\n           onChange={(e) => postDetails(e.target.files[0])}\r\n            id=\"custom-file\"\r\n            type=\"image/png\"\r\n            label=\"Upload Profile Picture\"\r\n            custom\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account ? <Link to=\"/login\">Login</Link>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  </MainScreen>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default RegisterScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}