{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\ITP Merge\\\\LMS\\\\frontend\\\\src\\\\screens\\\\MyNotes\\\\MyNotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { Button, Card, Badge, Accordion } from 'react-bootstrap';\nimport MainScreen from \"../../component/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport notes from \"../../data/notes\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyNotes = () => {\n  _s();\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {}\n  };\n\n  const fetchNotes = async () => {\n    const {\n      data\n    } = await axios.get(\"/api/notes\");\n    console.log(data);\n  };\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Welcome Back Shanaka Amarasinghe\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"createnote\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: 10,\n          marginBottom: 6\n        },\n        size: \"lg\",\n        children: \"Create New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Accordion, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"black\",\n              textDecoration: \"none\",\n              flex: 1,\n              cursor: \"pointer\",\n              alignSelf: \"center\",\n              fontSize: 18\n            },\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Card.Text,\n              variant: \"link\",\n              eventKey: \"0\",\n              children: note.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              href: `/note/${note._id}`,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              className: \"mx-2\",\n              onClick: () => deleteHandler(note._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: \"0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"success\",\n                children: [\"Category - \", note.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"blockquote\", {\n              className: \"blockquote mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: note.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n                className: \"blockquote-footer\",\n                children: \"Created on - date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyNotes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyNotes;\nexport default MyNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/ITP Merge/LMS/frontend/src/screens/MyNotes/MyNotes.js"],"names":["useEffect","Button","Card","Badge","Accordion","MainScreen","Link","notes","axios","MyNotes","deleteHandler","id","window","confirm","fetchNotes","data","get","console","log","marginLeft","marginBottom","map","note","margin","display","color","textDecoration","flex","cursor","alignSelf","fontSize","Text","title","_id","category","content"],"mappings":"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","sourcesContent":["import  { useEffect } from \"react\";\r\nimport { Button, Card ,Badge, Accordion } from 'react-bootstrap';\r\nimport MainScreen from \"../../component/MainScreen\";\r\nimport {Link} from \"react-router-dom\";\r\nimport notes, {} from \"../../data/notes\";\r\nimport axios from \"axios\";\r\nconst MyNotes = () => {\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n        }\r\n      };   \r\n\r\n const fetchNotes = async()=>{\r\n    const {data}=await axios.get(\"/api/notes\");\r\n \r\n    console.log(data);\r\n\r\n\r\n};     \r\n\r\nuseEffect(() => {\r\n    fetchNotes();\r\n    \r\n}, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   return (\r\n        <MainScreen title=\"Welcome Back Shanaka Amarasinghe\">\r\n            <Link to=\"createnote\">\r\n                <Button style={{marginLeft:10,marginBottom: 6}} size=\"lg\">\r\n                    Create New Note\r\n                </Button>\r\n                </Link>\r\n                    {\r\n                    notes.map(note=>(\r\n\r\n                     <Accordion>\r\n                           <Card style={{margin:10}}>\r\n            <Card.Header style={{display: \"flex\"}}>\r\n                <span\r\n                    style={{\r\n                        color:\"black\",\r\n                        textDecoration:\"none\",\r\n                        flex:1,\r\n                        cursor:\"pointer\",\r\n                        alignSelf:\"center\",\r\n                        fontSize:18,\r\n                    }}\r\n                >\r\n                   <Accordion.Toggle as={Card.Text} variant=\"link\" eventKey=\"0\">\r\n                        {note.title}\r\n                   </Accordion.Toggle>\r\n                  </span>\r\n            \r\n            <div>\r\n                <Button href={`/note/${note._id}`}>Edit</Button>\r\n                <Button variant=\"danger\" className=\"mx-2\" onClick={() => deleteHandler(note._id)}>\r\n                    Delete\r\n                    </Button>\r\n            </div>\r\n            </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n\r\n<h4>\r\n    <Badge variant=\"success\">\r\n        Category - {note.category}\r\n    </Badge>\r\n</h4>\r\n\r\n<blockquote className=\"blockquote mb-0\">\r\n    <p>{note.content}</p>\r\n  <footer className=\"blockquote-footer\">Created on - date</footer>  \r\n</blockquote>\r\n</Card.Body>\r\n\r\n\r\n                    </Accordion.Collapse>\r\n\r\n           \r\n                </Card>\r\n\r\n                     </Accordion>   \r\n          \r\n\r\n))\r\n                    }\r\n\r\n\r\n\r\n            \r\n        </MainScreen>\r\n    );\r\n};\r\n\r\nexport default MyNotes;\r\n"]},"metadata":{},"sourceType":"module"}