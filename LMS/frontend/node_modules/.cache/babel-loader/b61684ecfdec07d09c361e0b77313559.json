{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NGC\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\screens\\\\LoginScreen\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MainScreen from \"../../component/MainScreen\";\nimport \"./LoginScreen.css\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../../component/Loading\";\nimport ErrorMessage from \"../../component/ErrorMessage\";\nimport { login } from \"../../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // const [error,setError]=useState(false);\n  // const [loading,setLoading]=useState(false);\n  // function LoginScreen({ history }) {\n  //   const [email, setEmail] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin; // METHANA /mynotes eka wenas krala Home page eka denna. \n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  }; // function submitHandler(e){\n  //   e.preventDefault();\n  //   const checkuser = {\n  //     email,\n  //     password\n  //   }\n  //   axios.post(\"/api/users/login\",checkuser).then(()=>{\n  //       alert(\"Bank Added\")\n  //   }).catch((err)=>{\n  //       alert(err)\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"LOGIN\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 22\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            placeholder: \"Enter email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"New Customer ? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginScreen, \"YOEIr/rV78ySKeEAlgWgsue2CTk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/NGC/Desktop/LMS/frontend/src/screens/LoginScreen/LoginScreen.js"],"names":["Button","Col","Form","Row","Link","MainScreen","useEffect","useState","useDispatch","useSelector","Loading","ErrorMessage","login","LoginScreen","history","email","setEmail","password","setPassword","dispatch","userLogin","state","loading","error","userInfo","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { Button,Col,Form,Row } from \"react-bootstrap\";\r\nimport { Link} from \"react-router-dom\";\r\nimport MainScreen from \"../../component/MainScreen\"\r\nimport \"./LoginScreen.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Loading from \"../../component/Loading\";\r\nimport ErrorMessage from \"../../component/ErrorMessage\";\r\nimport { login } from \"../../actions/userActions\";\r\nconst LoginScreen = ({history}) => {\r\n\r\n  const [email,setEmail]=useState(\"\");\r\n  const [password,setPassword]=useState(\"\");\r\n  // const [error,setError]=useState(false);\r\n  // const [loading,setLoading]=useState(false);\r\n  \r\n  // function LoginScreen({ history }) {\r\n  //   const [email, setEmail] = useState(\"\");\r\n  //   const [password, setPassword] = useState(\"\");\r\n  \r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n  // METHANA /mynotes eka wenas krala Home page eka denna. \r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/mynotes\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n\r\n\r\n  const submitHandler=async(e)=>{\r\n  e.preventDefault();\r\n  \r\n  dispatch(login(email,password));\r\n};\r\n\r\n// function submitHandler(e){\r\n\r\n//   e.preventDefault();\r\n\r\n  \r\n\r\n//   const checkuser = {\r\n\r\n//     email,\r\n//     password\r\n\r\n//   }\r\n\r\n//   axios.post(\"/api/users/login\",checkuser).then(()=>{\r\n\r\n//       alert(\"Bank Added\")\r\n\r\n      \r\n\r\n//   }).catch((err)=>{\r\n\r\n//       alert(err)\r\n\r\n//   })\r\n\r\n// }\r\n\r\n\r\n  \r\n\r\n   return  (\r\n        <MainScreen title=\"LOGIN\">\r\n          <div className=\"loginContainer\">\r\n           <Form onSubmit={submitHandler}>\r\n           {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n           {loading && <Loading />}\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n    \r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n    \r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n              <Col>\r\n                New Customer ? <Link to=\"/register\">Register Here</Link>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </MainScreen>\r\n      );\r\n    };\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}