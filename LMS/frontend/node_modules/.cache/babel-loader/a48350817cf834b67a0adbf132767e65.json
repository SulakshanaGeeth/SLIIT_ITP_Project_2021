{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  //this will contained our reducers\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/NGC/Desktop/LMS/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","reducer","userLogin","userRegister","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,eAArC,QAA2D,OAA3D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,yBAAtD;AACA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AACxB;AACAO,EAAAA,SAAS,EAAEH,gBAFa;AAGxBI,EAAAA,YAAY,EAACH;AAHW,CAAD,CAA/B;AAMA,MAAMI,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAQA,MAAMG,YAAY,GAAE;AAChBP,EAAAA,SAAS,EAAE;AAAEQ,IAAAA,QAAQ,EAAEN;AAAZ;AADK,CAApB;AAMA,MAAMO,UAAU,GAAC,CAACd,KAAD,CAAjB;AAEA,MAAMe,KAAK,GAAElB,WAAW,CACpBO,OADoB,EAEpBQ,YAFoB,EAGpBX,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAHC,CAAxB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore,combineReducers,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\r\nconst reducer = combineReducers({\r\n        //this will contained our reducers\r\n        userLogin: userLoginReducer,\r\n        userRegister:userRegisterReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n\r\n\r\n\r\n\r\nconst initialState ={\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n\r\n\r\n};\r\n\r\nconst middleware=[thunk];\r\n\r\nconst store= createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store; "]},"metadata":{},"sourceType":"module"}