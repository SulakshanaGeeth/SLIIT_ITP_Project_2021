{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\ITP Merge\\\\LMS\\\\frontend\\\\src\\\\screens\\\\LoginScreen\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MainScreen from \"../../component/MainScreen\";\nimport \"./LoginScreen.css\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../../component/Loading\";\nimport ErrorMessage from \"../../component/ErrorMessage\";\nimport { login } from \"../../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // const [error,setError]=useState(false);\n  // const [loading,setLoading]=useState(false);\n  // function LoginScreen({ history }) {\n  //   const [email, setEmail] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin; // METHANA /mynotes eka wenas krala Home page eka denna.\n\n  useEffect(() => {\n    if (userInfo) {\n      if (userInfo._id == \"613c7c35b684ee8913a1f0ab\") {\n        history.push(\"/register\");\n      } else if (userInfo.isAdmin) {\n        localStorage.setItem(\"teacherID\", userInfo._id);\n        localStorage.setItem(\"teacherName\", userInfo.name);\n        console.log(userInfo._id);\n        history.push(\"/WithdrawHome\");\n      } else history.push(\"/profile\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  }; // function submitHandler(e){\n  //   e.preventDefault();\n  //   const checkuser = {\n  //     email,\n  //     password\n  //   }\n  //   axios.post(\"/api/users/login\",checkuser).then(()=>{\n  //       alert(\"Bank Added\")\n  //   }).catch((err)=>{\n  //       alert(err)\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"LOGIN\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            placeholder: \"Enter email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"New Customer ? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginScreen, \"qUHR4LLQ80O8gEBJdMrATlZBnkw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/ITP Merge/LMS/frontend/src/screens/LoginScreen/LoginScreen.js"],"names":["Button","Col","Form","Row","Link","MainScreen","useEffect","useState","useDispatch","useSelector","Loading","ErrorMessage","login","LoginScreen","history","email","setEmail","password","setPassword","dispatch","userLogin","state","loading","error","userInfo","_id","push","isAdmin","localStorage","setItem","name","console","log","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../component/MainScreen\";\r\nimport \"./LoginScreen.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Loading from \"../../component/Loading\";\r\nimport ErrorMessage from \"../../component/ErrorMessage\";\r\nimport { login } from \"../../actions/userActions\";\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // const [error,setError]=useState(false);\r\n  // const [loading,setLoading]=useState(false);\r\n\r\n  // function LoginScreen({ history }) {\r\n  //   const [email, setEmail] = useState(\"\");\r\n  //   const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n  // METHANA /mynotes eka wenas krala Home page eka denna.\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (userInfo._id == \"613c7c35b684ee8913a1f0ab\") {\r\n        history.push(\"/register\");\r\n      } else if (userInfo.isAdmin) {\r\n        localStorage.setItem(\"teacherID\", userInfo._id);\r\n        localStorage.setItem(\"teacherName\", userInfo.name);\r\n        console.log(userInfo._id);\r\n        history.push(\"/WithdrawHome\");\r\n      } else history.push(\"/profile\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  // function submitHandler(e){\r\n\r\n  //   e.preventDefault();\r\n\r\n  //   const checkuser = {\r\n\r\n  //     email,\r\n  //     password\r\n\r\n  //   }\r\n\r\n  //   axios.post(\"/api/users/login\",checkuser).then(()=>{\r\n\r\n  //       alert(\"Bank Added\")\r\n\r\n  //   }).catch((err)=>{\r\n\r\n  //       alert(err)\r\n\r\n  //   })\r\n\r\n  // }\r\n\r\n  return (\r\n    <MainScreen title=\"LOGIN\">\r\n      <div className=\"loginContainer\">\r\n        <Form onSubmit={submitHandler}>\r\n          {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n          {loading && <Loading />}\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            New Customer ? <Link to=\"/register\">Register Here</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}